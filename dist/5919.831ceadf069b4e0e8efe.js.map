{"version":3,"file":"5919.831ceadf069b4e0e8efe.js","mappings":"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,EAAAA,EAAAA,KAA+Bj+B,GACxEk+B,uBAAuBC,EAAAA,EAAAA,KAA4Bn+B,GACnD8qB,uBAAwB9qB,EAAOu4B,SAASC,MAAM1N,uBAC9C0P,oBACA4D,YAAap+B,EAAOq+B,QAAQD,YAC5BzD,eACD,GA7He56B,EA7lDwBu+B,EAC1CpiB,OACA8e,gBACAuD,gBACA5C,iBACAR,yBACAqD,UACA/zB,WACAg0B,aACAC,UACAC,SACAzD,iBACAj7B,SACA8V,WACAwhB,UACAuC,qBACApK,kBACAa,QACArwB,OACAy6B,eACAZ,0BACAhI,uBACAiI,wBACArC,gBACA5G,kBACAsK,aACAoC,iBACAnC,sBACAE,sBACAsC,wBACAzN,gBACAyL,aACAlD,wBACAgD,0BACAgD,oBACAlD,uBACAK,oBACAG,uBACAE,oBACAE,mBACAxD,iBACAC,eACA6E,gBACAnB,wBACArE,yBACAC,4BACAI,qBACAC,iBACAgE,gBACAE,cACAE,sBACAG,eACAD,mBACA3D,cACAC,cACAL,YACAkB,gBACAZ,sBACAE,uBACA2D,iBACAzS,cACA4S,sBACAM,sBACAt1B,SACA2xB,YACA5B,+BACAuG,4BACAC,mBACAC,WACA59B,aACA25B,sBACAC,gBACAiD,iBACAE,yBACApT,0BACA0P,qBACA4D,eACAY,iBAEA,MAAM,YACJC,GAAW,WACXC,GAAU,WACVC,GAAU,gBACVxP,GAAe,cACfyP,GAAa,eACbC,GAAc,qBACdC,GAAoB,WACpBC,GAAU,eACVC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBC,GAAa,qBACbC,GAAoB,iBACpBtoB,GAAgB,oCAChBuoB,GAAmC,wBACnCC,GAAuB,oBACvBC,GAAmB,kBACnBC,KACE1+B,EAAAA,EAAAA,MAEEC,IAAOC,EAAAA,EAAAA,KAGPy+B,IAAWp8B,EAAAA,EAAAA,IAAuB,MAGlCq8B,IAAmBr8B,EAAAA,EAAAA,IAA0B,OAE5CiyB,GAASqK,KAAWC,EAAAA,GAAAA,GAAU,KAC9BC,GAAWC,KAAgB11B,EAAAA,EAAAA,KAAS,GACrC21B,IAAoBC,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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useBotCommandTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/hooks/useSelectorSignal.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelector.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {renderingFetchedParticipants?.map((peer) => (\n          <Avatar\n            key={peer.id}\n            peer={peer}\n          />\n        ))}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(Boolean(autoPlay));\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isOneTimeModalOrigin = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isOneTimeModalOrigin;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isOneTimeModalOrigin;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    voice,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      // Set new date to prevent saving state of the track\n      openOneTimeMediaModal({ message: { ...message, date: Date.now() } });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isOneTimeModalOrigin) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isOneTimeModalOrigin]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isOneTimeModalOrigin && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className=\"toogle-play-wrapper\">\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          className={buttonClassNames.join(' ')}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isOneTimeModalOrigin}\n        >\n          {!isOneTimeModalOrigin && <Icon name=\"play\" />}\n          {!isOneTimeModalOrigin && <Icon name=\"pause\" />}\n          {isOneTimeModalOrigin && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isOneTimeModalOrigin && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isOneTimeModalOrigin && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isOneTimeModalOrigin) && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ahi3up0oMwlFJTE6hkxG\",\"size-micro\":\"DOhAE8mniLY2g2i7rkfz\",\"sizeMicro\":\"DOhAE8mniLY2g2i7rkfz\",\"size-mini\":\"gF82cRdQRxqmTN8fLb9i\",\"sizeMini\":\"gF82cRdQRxqmTN8fLb9i\",\"size-tiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"sizeTiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"size-small\":\"iaKZOfQnH3hROD8QK_fq\",\"sizeSmall\":\"iaKZOfQnH3hROD8QK_fq\",\"size-small-mobile\":\"YP90v9JGup97HOcD2duf\",\"sizeSmallMobile\":\"YP90v9JGup97HOcD2duf\",\"size-medium\":\"TmYXjEqVbt0gwaoWlRHv\",\"sizeMedium\":\"TmYXjEqVbt0gwaoWlRHv\",\"size-large\":\"YIuShtdEPpbCXrGgmeFv\",\"sizeLarge\":\"YIuShtdEPpbCXrGgmeFv\",\"size-jumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"sizeJumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"avatar\":\"PTpUqAuoZL9Uou6MqJXX\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport renderText from './helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n    topicLink?: string;\n    hasSavedMessages?: boolean;\n  };\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (!userId) return;\n    loadFullUser({ userId });\n  }, [userId]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {hasSavedMessages && (\n        <ListItem icon=\"saved-messages\" ripple onClick={handleOpenSavedDialog}>\n          <span>{lang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? Number(threadId) : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n    };\n  },\n)(ChatExtra));\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverUrl = cover ? `data:${cover.format};base64,${cover.data.toString('base64')}` : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n}) {\n  const { openLimitReachedModal, showAllowedMessageTypesNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n        setShouldSuggestCompression(undefined);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    handleSetAttachments([\n      ...attachments,\n      ...await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      ))),\n    ]);\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    handleSetAttachments(await Promise.all(files.map((file) => buildAttachment(file.name, file))));\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n\nfunction getAttachmentType(attachment: ApiAttachment) {\n  if (attachment.shouldSendAsFile) return 'file';\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'image';\n  }\n\n  if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'video';\n  }\n\n  if (SUPPORTED_AUDIO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'audio';\n  }\n\n  return 'file';\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useBotCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || !commands) {\n      setFilteredBotCommands(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean(filteredBotCommands?.length && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n  };\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      const shouldSetAttachments = files?.length && !editedMessage && !isWordDocument;\n\n      if (shouldSetAttachments) {\n        const newAttachments = await Promise.all(files!.map((file) => {\n          return buildAttachment(file.name, file);\n        }));\n        setAttachments((attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji, onCustomEmojiStripped,\n    setNextText,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      saveDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        text: parseHtmlAsFormattedText(html),\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n\n    if (!IS_TOUCH_ENV) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_IMAGE_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      <ResponsiveHoverButton\n        id=\"attach-menu-button\"\n        className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n        round\n        color=\"translucent\"\n        onActivate={handleToggleAttachMenu}\n        ariaLabel=\"Add an attachment\"\n        ariaControls=\"attach-menu-controls\"\n        hasPopup\n      >\n        <i className=\"icon icon-attach\" />\n      </ResponsiveHoverButton>\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {(canSendDocuments || canSendAudios)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {canAttachMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandTooltip = useModuleLoader(Bundles.Extra, 'BotCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandTooltip ? <BotCommandTooltip {...props} /> : undefined;\n};\n\nexport default BotCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row) => (\n          <div className=\"row\">\n            {row.map((button) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n};\n\nconst FORWARD_RENDERING_DELAY = 300;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeForwardRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n  const isShown = Boolean(\n    ((replyInfo || editingId) && message)\n    || (sender && forwardedMessagesCount),\n  );\n  const canAnimate = useAsyncRendering(\n    [isShown, isForwarding],\n    isShown && isForwarding ? FORWARD_RENDERING_DELAY : undefined,\n  );\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(\n    canAnimate && isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n  );\n\n  const clearEmbedded = useLastCallback(() => {\n    if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    } else if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const handleMessageClick = useLastCallback((): void => {\n    if (isForwarding) return;\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n  });\n\n  const handleChangeRecipientClick = useLastCallback(() => {\n    changeForwardRecipient();\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) handleContextMenuClose();\n  }, [handleContextMenuClose, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n\n  const leftIcon = useMemo(() => {\n    if (isShowingReply) {\n      return 'reply';\n    }\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu} onClick={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\">\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? lang('EditMessage')\n            : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {isForwarding && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            <MenuItem\n              icon={!noAuthors ? 'message-succeeded' : undefined}\n              customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: false,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n            </MenuItem>\n            <MenuItem\n              icon={noAuthors ? 'message-succeeded' : undefined}\n              customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: true,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n            </MenuItem>\n            {forwardsHaveCaptions && (\n              <>\n                <MenuSeparator />\n                <MenuItem\n                  icon={!noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                </MenuItem>\n                <MenuItem\n                  icon={noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                </MenuItem>\n              </>\n            )}\n            <MenuSeparator />\n            <MenuItem icon=\"replace\" onClick={handleChangeRecipientClick}>\n              {lang('ChangeRecipient')}\n            </MenuItem>\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { shouldForceShowEditing }): StateProps => {\n    const { chatId, threadId, type: messageListType } = selectCurrentMessageList(global) || {};\n    if (!chatId || !threadId || !messageListType) {\n      return {};\n    }\n\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global);\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n\n    let message: ApiMessage | undefined;\n    if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    } else if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    }\n\n    let sender: ApiPeer | undefined;\n    if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (editingId && message) {\n      sender = selectSender(global, message);\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiChatMember,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectPeerStory,\n  selectRequestedDraftFiles,\n  selectRequestedDraftText,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { processMessageInputForCustomEmoji } from '../../util/customEmojiManager';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dateFormat';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { escapeHtml } from '../middle/composer/helpers/cleanHtml';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useInterval from '../../hooks/useInterval';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useSignal from '../../hooks/useSignal';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useBotCommandTooltip from '../middle/composer/hooks/useBotCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotCommandTooltip from '../middle/composer/BotCommandTooltip.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport ReactionSelector from '../middle/message/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    shouldSchedule?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    groupChatMembers?: ApiChatMember[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    chatBotCommands?: ApiBotCommand[];\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraftText?: string;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  shouldSchedule,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  groupChatMembers,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  chatBotCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraftText,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n  } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, isChatWithBot, isInStoryViewer),\n    [chat, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const {\n    isOpen: isBotCommandTooltipOpen,\n    close: closeBotCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n  } = useBotCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length)),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (shouldSchedule) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, shouldSchedule,\n  ]);\n  const canShowCustomSendMenu = !shouldSchedule;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    sendMessage({\n      messageList: currentMessageList,\n      text,\n      entities,\n      scheduledAt,\n      isSilent,\n      shouldUpdateStickerSetOrder,\n      attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      shouldGroupMessages: sendGrouped,\n    });\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform } },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraftText) {\n      setHtml(escapeHtml(requestedDraftText));\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraftText, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isBotCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({ sendCompressed, sendGrouped }, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilentAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    sendSilent({ sendCompressed, sendGrouped });\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={shouldSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachments}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <BotCommandTooltip\n        isOpen={isBotCommandTooltipOpen}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        getHtml={getHtml}\n        onClick={handleBotCommandSelect}\n        onClose={closeBotCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks')}>\n        <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n          <defs>\n            <filter\n              x=\"-50%\"\n              y=\"-14.7%\"\n              width=\"200%\"\n              height=\"141.2%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"composerAppendix\"\n            >\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n              <feColorMatrix\n                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                in=\"shadowBlurOuter1\"\n              />\n            </filter>\n          </defs>\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n          </g>\n        </svg>\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            isButtonVisible={!activeVoiceRecording && !editingMessage}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={shouldSchedule}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList}\n          canScheduleUntilOnline={canScheduleUntilOnline}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!shouldSchedule ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraftText = selectRequestedDraftText(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n\n    return {\n      availableReactions: type === 'story' ? global.availableReactions : undefined,\n      topReactions: type === 'story' ? global.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      shouldSchedule: messageListType === 'scheduled',\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      groupChatMembers: chatFullInfo?.members,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      chatBotCommands: chatFullInfo?.botCommands,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraftText,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n    };\n  },\n)(Composer));\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleDownload = useLastCallback(() => {\n    downloadMessageMedia({ message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\n\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus, draftDate }) => {\n  const lang = useLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"n_u0sMwb5oen1kZQ0pTB\",\"input\":\"jehrl4eCR56s7i_qnPJr\",\"moreMenu\":\"NCIcjJKDloynKk14TiXg\",\"copy\":\"kiphUJhXSSQktqe2YGV_\",\"title\":\"teihdlkVODIhiAWnOJtr\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: link });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\",\"dots-animation\":\"ZWMMBxKD6WAeWLI27YOg\",\"dotsAnimation\":\"ZWMMBxKD6WAeWLI27YOg\",\"-7s\":\"UYRulRheGjTql4xAbURj\",\"7S\":\"UYRulRheGjTql4xAbURj\",\"-14s\":\"luaiQWxNoz8gYcb2XqSG\",\"14S\":\"luaiQWxNoz8gYcb2XqSG\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  className?: string;\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  forceShowSelf?: boolean;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  className,\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  forceShowSelf,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className={buildClassName('Picker', className)}>\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName('picker-list', 'custom-scroll', isRoundCheckbox && 'withRoundedCheckbox')}\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo forceShowSelf={forceShowSelf} userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (user || chat) {\n    iconElement = (\n      <Avatar\n        peer={user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = !chat || (user && !isSavedMessages)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, isSavedMessages);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    fluid && 'fluid',\n    withPeerColors && getPeerColorClass(chat || user),\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qhFxTh5sx1oGuGccrzTb\",\"withBadge\":\"fltQkzCy9DRS9QWsAAH5\",\"badgeContainer\":\"ZGxYvTYQkAjpjvgBHMdH\",\"slide-in\":\"Ybb5P4BAFmSaffktaa81\",\"slideIn\":\"Ybb5P4BAFmSaffktaa81\",\"floating-badge-wrapper\":\"pAGwoR5ceC4Y2MoDqG1g\",\"floatingBadgeWrapper\":\"pAGwoR5ceC4Y2MoDqG1g\",\"rotate-in\":\"zyC6DJuexMszfxuDeBMR\",\"rotateIn\":\"zyC6DJuexMszfxuDeBMR\",\"floating-badge\":\"N8o73q2OT6d_kUTyUcg5\",\"floatingBadge\":\"N8o73q2OT6d_kUTyUcg5\",\"floating-badge-triangle\":\"m6YwWsobe1cb3cqf0Xei\",\"floatingBadgeTriangle\":\"m6YwWsobe1cb3cqf0Xei\",\"floating-badge-icon\":\"_qQItdFB5DScaFdSJR2a\",\"floatingBadgeIcon\":\"_qQItdFB5DScaFdSJR2a\",\"floating-badge-value\":\"h46zskGqCT1b3onjQB26\",\"floatingBadgeValue\":\"h46zskGqCT1b3onjQB26\",\"left\":\"OP8qshGP9fzy9bbMvWn2\",\"right\":\"EjQP1rE5iExOnGWJyYIe\",\"progress\":\"ASLJoYhAmOvHasjzMKYg\",\"fullProgress\":\"tmwWY_SiGqqKrC8oUUDW\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLang from '../../hooks/useLang';\n\nimport Icon from './Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst PROGRESS_LOCK = 0.1;\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useLang();\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  const tailPosition = progress && (progress < PROGRESS_LOCK ? 0 : progress > 1 - PROGRESS_LOCK ? 1 : 0.5);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        peer={user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserFullName,\n  getVideoAvatarMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = user || chat;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(peer, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPhoto, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n    emojiStatusSticker?: ApiSticker;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n  emojiStatusSticker,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const mediaIdRef = useStateRef(mediaId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Reset the current avatar photo to the one selected in Media Viewer if photos have changed\n  useEffect(() => {\n    setHasSlideAnimation(false);\n    setCurrentPhotoIndex(mediaIdRef.current || 0);\n  }, [mediaIdRef, photos]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!userId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: userId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (!photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const peerId = (chatId || userId)!;\n\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    if (isAnonymousForwards) return undefined;\n\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      mediaId,\n      avatarOwnerId,\n      emojiStatusSticker,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport Icon from '../Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const wrappedMedia = useMemo(() => {\n    const replyMedia = replyInfo?.type === 'message' && replyInfo.replyMedia;\n    if (!replyMedia) return undefined;\n    return {\n      content: replyMedia,\n    };\n  }, [replyInfo]);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message || wrappedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : message?.forwardInfo?.hiddenUserName;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender?.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n      });\n    }\n\n    if (!message) {\n      return customText || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        lang={lang}\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isChatSender = senderChat?.id === sender?.id;\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {!isChatSender && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && renderText(senderChatTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ypqi0benYTguShBFVcsL\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerPreviewHash(customEmoji.id) : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  useEffect(() => {\n    updateCanvas();\n  }, [emojiImage, lang.isRtl, customColor]);\n\n  const updateCanvasSize = useLastCallback((parentWidth: number, parentHeight: number) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    canvas.width = parentWidth * dpr;\n    canvas.height = parentHeight * dpr;\n\n    canvas.style.width = `${parentWidth}px`;\n    canvas.style.height = `${parentHeight}px`;\n\n    updateCanvas();\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    requestMutation(() => {\n      updateCanvasSize(width, height);\n    });\n  });\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    requestMutation(() => {\n      updateCanvasSize(width, height);\n    });\n  }, [dpr]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n  };\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageKey,\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n  return orderBy(chatIds, (id) => {\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CBuciapCXTFHGIT8QJjp\",\"particle\":\"zSAQoiw2P8dHog4GGC6Y\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerPreviewHash(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"UoQ7Ahl_08BYJER7dkXg\",\"animated-icon\":\"m6I0yrKxFYZrVajqEjYY\",\"animatedIcon\":\"m6I0yrKxFYZrVajqEjYY\",\"effect\":\"DUYRztiKh76RsdbcJpu8\",\"animating\":\"_sWZKdctR4GWBAZk5LvT\",\"withEffectOnly\":\"bcQvAAQmccIErVUj7YDo\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          forceAlways\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { availableReactions, genericEmojiEffects } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden, isSavedDialog,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import { addCallback } from '../lib/teact/teactn';\nimport { getGlobal } from '../global';\n\nimport type { GlobalState } from '../global/types';\nimport type { Signal, SignalSetter } from '../util/signals';\n\nimport { createSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\n/*\n  This hook is a more performant variation of the standard React `useSelector` hook. It allows to:\n  a) Avoid multiple subscriptions to global updates by leveraging a single selector reference.\n  b) Return a signal instead of forcing a component update right away.\n */\n\ntype Selector<T extends any> = (global: GlobalState) => T;\n\ninterface State<T extends any> {\n  clientsCount: number;\n  getter: Signal<T>;\n  setter: SignalSetter;\n}\n\nconst bySelector = new Map<Selector<any>, State<any>>();\n\naddCallback((global: GlobalState) => {\n  for (const [selector, { setter }] of bySelector) {\n    setter(selector(global));\n  }\n});\n\nfunction useSelectorSignal<T extends any>(selector: Selector<T>): Signal<T> {\n  let state = bySelector.get(selector);\n\n  if (!state) {\n    const [getter, setter] = createSignal(selector(getGlobal()));\n    state = { clientsCount: 0, getter, setter };\n    bySelector.set(selector, state);\n  }\n\n  useEffectOnce(() => {\n    state!.clientsCount++;\n\n    return () => {\n      state!.clientsCount--;\n\n      if (!state!.clientsCount) {\n        bySelector.delete(selector);\n      }\n    };\n  });\n\n  return state.getter;\n}\n\nexport default useSelectorSignal;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wYxzEPxIxq51N_1Jvb22\",\"indicator\":\"GjqQzJt4PhbEBMchbPMg\",\"indicatorInner\":\"mem3FdA38CqQltSSxUwi\",\"selected\":\"J83lhIRMV9uenQVCQJpB\",\"active\":\"AtRfJ5hbKIb7giL05RZz\",\"bar-animation-transform-2\":\"fvooOFoNHT8RmLcjbCMZ\",\"barAnimationTransform2\":\"fvooOFoNHT8RmLcjbCMZ\",\"bar-animation-transform-1\":\"V89uAJI0AldAPq3h8iKW\",\"barAnimationTransform1\":\"V89uAJI0AldAPq3h8iKW\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  isSavedDialog?: boolean;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} isSavedDialog={isSavedDialog} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isSavedDialog }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"root\":\"auVVCT950ajs6Uf4jI_w\",\"title\":\"RrIwnolHiQkojIfDEmg3\",\"info\":\"W7svz8CjmnPmDhwiz6cJ\",\"buttons\":\"lV9Uc02uJwQff0VQsKTj\",\"button\":\"D0dko7sVnw0KDtqjY0bH\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"no-animation\":\"mPOFnJvncopcVbbyZrzs\",\"noAnimation\":\"mPOFnJvncopcVbbyZrzs\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"otherColumnIcon\":\"mrAD_CKmksSYVhfxgz_w\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLang from '../../hooks/useLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(lang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YvbBu9WqHc6EaZQqpCD4\",\"notch\":\"Vs67Kltco23aOvBnBVwx\",\"notch-path\":\"QVcflcvWzNx7TBgRPE8A\",\"notchPath\":\"QVcflcvWzNx7TBgRPE8A\",\"join-text\":\"cubTFXbXkzVyj4keXeHS\",\"joinText\":\"cubTFXbXkzVyj4keXeHS\",\"header\":\"Tow5g8DPTGGBHAwVe4tv\",\"title\":\"tygkeEHLLluikgwpyZkd\",\"close\":\"qPBMuYUdpBkknJeUsNE5\",\"icon\":\"Lf7Dn20iVbNoeXTlX25h\",\"skeleton\":\"f7c9da3bHwkhN7w1JIlX\",\"inner\":\"dIIx1pFbGE_dHbFmFJhW\",\"is-appearing\":\"j2nj9WTmx1T2EEljJymQ\",\"isAppearing\":\"j2nj9WTmx1T2EEljJymQ\",\"channels-appear\":\"AchhM8ZVoWw269CXTDUm\",\"channelsAppear\":\"AchhM8ZVoWw269CXTDUm\",\"is-hiding\":\"pODue29ElFw3abmiHgNx\",\"isHiding\":\"pODue29ElFw3abmiHgNx\",\"channels-disappear\":\"QjzenEch5pTjWFtuQcN6\",\"channelsDisappear\":\"QjzenEch5pTjWFtuQcN6\",\"channel-list\":\"GW1GTbMbnYrWFoCLKsrc\",\"channelList\":\"GW1GTbMbnYrWFoCLKsrc\",\"item\":\"dIiicdtFfSqHa30bk4HA\",\"last-item\":\"fK9bpXUAJdPEojy6e7N7\",\"lastItem\":\"fK9bpXUAJdPEojy6e7N7\",\"avatar\":\"NkJNitb4MuHHm3ONUJ7g\",\"badge\":\"xJNkoC_P7lDWgs3Yf7Na\",\"members-count\":\"wwoobzzCOQLBlEH996PX\",\"membersCount\":\"wwoobzzCOQLBlEH996PX\",\"channel-title\":\"icNNtsYoLdjjVeafiuwo\",\"channelTitle\":\"icNNtsYoLdjjVeafiuwo\",\"fake-avatar\":\"O2QXUb3pXUmkjlPH5GOy\",\"fakeAvatar\":\"O2QXUb3pXUmkjlPH5GOy\",\"fake-avatar-inner\":\"JL7v1sziZVFp4DwCI5ta\",\"fakeAvatarInner\":\"JL7v1sziZVFp4DwCI5ta\",\"last-fake-avatar\":\"I8jHBecbEYQHVUeYIkZn\",\"lastFakeAvatar\":\"I8jHBecbEYQHVUeYIkZn\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getAverageColor, rgb2hex } from '../../../util/colors';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useTimeout from '../../../hooks/useTimeout';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useLang();\n  const { toggleChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY, []);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = () => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  };\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <i className={buildClassName(styles.icon, 'icon icon-user-filled')} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nfunction useAverageColor(channel: ApiChat) {\n  const [color, setColor] = useState(DEFAULT_BADGE_COLOR);\n  const imgBlobUrl = useMedia(getChatAvatarHash(channel), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, ThreadId } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport {\n  getChatTitle, getMessageHtmlId, isChatChannel, isJoinedChannelMessage,\n} from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const { openPremiumModal, requestConfetti, checkGiftCode } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isGiftCode = Boolean(message.content.action?.text.startsWith('BoostingReceivedGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({});\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}</strong>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n          getChatTitle(lang, targetChat!)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'BoostingUnclaimedPrizeDuration',\n            lang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        <span className=\"action-message-button\">{lang('BoostingReceivedGiftOpenBtn')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && (\n        <span className=\"action-message-content\">{renderContent()}</span>\n      )}\n      {isGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const userId = senderId;\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const chat = selectChat(global, chatId);\n    const isChat = chat && (isChatChannel(chat) || userId === chatId);\n    const senderUser = !isChat && userId ? selectUser(global, userId) : undefined;\n    const senderChat = isChat ? chat : undefined;\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewBoosts = isMainThread && isChannel && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewBoosts,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vL8HfVVnjTeFmp1ECFj8\",\"compact\":\"N3E1geoPu1vesCKf545F\",\"image\":\"Fb4aIyDYEwOlaqY8oZkV\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u1iXUR7f9a1fJ3oKj6UR\",\"preview\":\"PdT0BgaOGO3KQ6uAMywg\",\"linkPreview\":\"VjvrVyctay2XnrWkF6Pm\",\"media\":\"bCVEWkiPlJ2vOFKdsOZn\",\"nonInteractive\":\"sM8Yb5GJn63Lqe7WGyxs\",\"expired\":\"GU6ftk8mOSKG68G3clJz\",\"expiredIcon\":\"C6JcJFH05QLPlgncYbFX\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(photo.isSpoiler);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './ReactionSelectorReaction.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelectorReaction');\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  onToggleReaction,\n}) => {\n  function handleClick() {\n    onToggleReaction(reaction);\n  }\n\n  return (\n    <div\n      className={cn(\n        '&',\n        'custom',\n        chosen && 'chosen',\n        !noAppearAnimation && isReady && 'custom-animated',\n        noAppearAnimation && 'visible',\n      )}\n      style={style}\n      onClick={handleClick}\n    >\n      <CustomEmoji\n        documentId={reaction.documentId}\n        size={REACTION_SIZE}\n      />\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\n\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\n\nimport './ReactionSelectorReaction.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelectorReaction');\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={cn('&', chosen && 'chosen')}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={cn('static-icon')}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  canSendReaction, getReactionUniqueKey, isSameReaction, sortReactions,\n} from '../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 6;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  onToggleReaction,\n  onShowMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const availableReactions = useMemo(() => {\n    const reactions = (enabledReactions?.type === 'some' && enabledReactions.allowed)\n      || allAvailableReactions?.map((reaction) => reaction.reaction);\n    const filteredReactions = reactions?.map((reaction) => {\n      const isCustomReaction = 'documentId' in reaction;\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction: currentReaction }) => isSameReaction(reaction, currentReaction))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(filteredReactions, topReactions);\n  }, [allAvailableReactions, currentReactions, enabledReactions, isPrivate, maxUniqueReactions, topReactions]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&', lang.isRtl && 'isRtl'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {reactionsToRender.map((reaction, i) => (\n            'reaction' in reaction ? (\n              <ReactionSelectorReaction\n                key={getReactionUniqueKey(reaction.reaction)}\n                isReady={isReady}\n                onToggleReaction={onToggleReaction}\n                reaction={reaction}\n                noAppearAnimation={!canPlayAnimatedEmojis}\n                chosen={userReactionIndexes.has(i)}\n              />\n            ) : (\n              <ReactionSelectorCustomReaction\n                key={getReactionUniqueKey(reaction)}\n                isReady={isReady}\n                onToggleReaction={onToggleReaction}\n                reaction={reaction}\n                noAppearAnimation={!canPlayAnimatedEmojis}\n                chosen={userReactionIndexes.has(i)}\n                style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n              />\n            )\n          ))}\n          {withMoreButton && (\n            <Button\n              color=\"translucent\"\n              className={cn('show-more')}\n              onClick={handleShowMoreClick}\n            >\n              <i className=\"icon icon-down\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(video.isSpoiler);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  onMediaClick?: () => void;\n  onCancelMediaTransfer?: () => void;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  onMediaClick,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    type,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = false;\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersection}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            {backgroundEmojiId && (\n              <EmojiIconBackground\n                emojiDocumentId={backgroundEmojiId}\n                className=\"WebPage--background-icons\"\n              />\n            )}\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersection!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n      return 'lng_view_button_boost';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport {\n  getMessagePhoto,\n  getMessageText,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../../global/helpers';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n  isQuote?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => {\n        const result = animateScroll(\n          messagesContainer,\n          elementRef.current!,\n          isToBottom ? 'end' : 'centerOrTop',\n          FOCUS_MARGIN,\n          focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n          focusDirection,\n          undefined,\n          isResizingContainer,\n          true,\n        );\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"x62SJD7nuLUpIIlnJTv6\",\"header\":\"IjmUGHMAuPEVp35VsCgx\",\"title\":\"_dn8co5wdJt5b2UaxFfX\",\"caption\":\"ezmH45dow7OBiLlOipZt\",\"table\":\"g7t0KObI5uHkotdVoD9N\",\"tableCell\":\"Wi6tadyqvllR7l_pkcxR\",\"tableHeading\":\"NpALvYqpe5N2L1ddrYlS\",\"tableValue\":\"ypRrr0fjurHlSvEwWzcm\",\"tableSecondaryValue\":\"SXPAsM3uNS_a8KThhOt6\",\"value\":\"pcCb3zfdimbZ84SPtVhy\",\"negative\":\"WT9VmQr51xZyJy3_21rk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiPostStatistics | ApiBoostStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  className,\n}) => {\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport {\n  selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active } } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideo) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    video.pause();\n    video.src = '';\n    video.load();\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"oWM0Zdb5uhUcOVtc99aS\",\"mediaArea\":\"qF5NAjzN826sfFvUwCi1\",\"preview\":\"dDrvIyufIoAgicpd5jBf\",\"shiny\":\"mHQ5t7g14fbpeDSyTLcd\",\"wave\":\"PlA2GEm5aGvfxsFwsAwE\",\"suggestedReaction\":\"K8z7QedYZHumSrLQCrZq\",\"dark\":\"cKzIdSabAL8MJ9G60u77\",\"background\":\"QxSGHD_yTaeyLhKS2qqz\",\"flipped\":\"CiCfsJ1VaeHZ624tudjv\",\"reaction\":\"Oi4FupikW1BQIPXxj9a7\",\"withCount\":\"dCSRvNsQTjKPeBul8iIX\",\"reactionCount\":\"WAKY7bjrmisH3k1XFQMZ\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const { openMapModal, focusMessage, closeStoryViewer } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost': {\n            const isShiny = isActive && (mediaArea.type === 'geoPoint' || mediaArea.type === 'venue');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLang from '../useLang';\nimport useLastCallback from '../useLastCallback';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc && trackType !== 'oneTimeVoice') {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isUserId(chat.id) || isSavedDialog) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSignal from './useSignal';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, forceUpdate, isStreaming, delay, handleProgress, isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLang from './useLang';\nimport useLastCallback from './useLastCallback';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        video.pause();\n        video.src = '';\n        video.load();\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nfunction useTimeout(callback: () => void, delay?: number, dependencies: readonly any[] = []) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [delay, savedCallback, ...dependencies]);\n}\n\nexport default useTimeout;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from '../global/helpers';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"J2OUAM1NNJzVPwPvfhkE\",\"fadeIn\":\"M0CnDOPqsqgp07DpRE7u\",\"closing\":\"U1ngPxxXOIuHX2rXUTdq\",\"peer\":\"N26JMlalq5jDriKQ7nFD\",\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"name_hasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"nameHasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"hidden\":\"c5X6suR_qxO1W64dH2j3\",\"contextMenu\":\"nAc8FkZyj9PHGgGm0BO7\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"root\":\"laLpjZnhOwW8cdBN3mEv\",\"avatar\":\"ewhbkm9F8nGqLpj_toQg\",\"avatarHidden\":\"aPEbisewADPmseTVcQxO\",\"ghost\":\"bVo8M4JDvB9c6gUvnHTE\",\"ghostAnimateName\":\"DuJzmNpO8VBweCzETZQJ\",\"ghostRevealName\":\"ghy_xXQVvFUwJrNg9uhA\",\"ghostLast\":\"_mqUJoir6gIYUJWb0zFw\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","peer","Avatar","key","Button","round","AnimatedCounter","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","openOneTimeMediaModal","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","hasTtl","hasMessageTtl","isOneTimeModalOrigin","AudioOrigin","OneTimeModal","trackType","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","decodedWaveform","decodeWaveform","Uint8Array","interpolateArray","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","Date","now","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","nonInteractive","Icon","name","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","AvatarList","peers","root","avatar","runDebounced","debounce","cb","chatOrUserId","isSavedDialog","countryList","phoneCodes","phoneCodeList","user","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","Number","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","includes","ChatExtra","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","userId","usernames","phoneNumber","isSelf","chatUsernames","peerId","areNotificationsEnabled","setAreNotificationsEnabled","useEffectWithPrevDeps","prevPeerId","isTopicInfo","MAIN_THREAD_ID","activeUsernames","result","u","activeChatUsernames","link","getChatLink","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","username","nick","idx","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","MAX_ASPECT_RATIO","FILE_EXT_REGEX","async","buildAttachment","filename","blob","options","blobUrl","URL","createObjectURL","type","mimeType","quick","shouldSendAsFile","SUPPORTED_IMAGE_CONTENT_TYPES","img","preloadImage","validateAspectRatio","shouldShrink","isGif","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","replace","SUPPORTED_VIDEO_CONTENT_TYPES","videoWidth","videoHeight","preloadVideo","err","createPosterForVideo","SUPPORTED_AUDIO_CONTENT_TYPES","coverUrl","url","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","toString","parseAudioMetadata","uniqueId","random","prepareAttachmentsToSend","attachments","shouldSendCompressed","attach","shouldSendAsSpoiler","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","getAttachmentType","attachment","RE_COMMAND","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","addEventListener","handlePaste","removeEventListener","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","innerHTML","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","handleDocumentSelect","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","disabled","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","BotCommandTooltip","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","keyboardButtons","noCompact","row","BotMenuButton","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","sender","replyToPeerId","replyToMsgId","selectEditingMessage","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","selectForwardedSender","hiddenUserName","quoteText","selectSender","selectPeer","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","setEditingId","focusMessage","changeForwardRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","isReplyToTopicStart","action","isShown","canAnimate","useAsyncRendering","clearEmbedded","captureEscKeyListener","handleMessageClick","noForumTopicPanel","handleClearClick","handleChangeRecipientClick","isContextMenuOpen","contextMenuPosition","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","renderingSender","innerClassName","getPeerColorClass","isShowingReply","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","WebPagePreview","getHtml","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","getLink","useDerivedSignal","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","DeleteMessageModal","MainButtonState","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","chatBotFullInfo","chatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","currentUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraftText","selectRequestedDraftText","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForumAsMessages","selectTopicFromMessage","availableReactions","topReactions","isOnActiveTab","isBlurred","editingMessage","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","shouldSchedule","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","groupChatMembers","members","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","chatBotCommands","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","stealthMode","stories","Composer","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","limit","shouldForce","isSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","isBotCommandTooltipOpen","close","closeBotCommandTooltip","filteredBotCommands","botTooltipCommands","setFilteredBotCommands","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","useBotCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","isEditing","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","EDITABLE_INPUT_CSS_SELECTOR","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","editMessage","setEditingDraft","setShouldForceShowEditing","replyingToId","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","floor","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","shouldGroupMessages","isLocalOnly","handleSendAttachments","handleSend","currentAttachments","record","handleClickBotMenu","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","escapeHtml","handleCustomEmojiSelect","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","onShowMore","isForMessage","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","CustomEmojiTooltip","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isMessageDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","self","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","value","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","mediaBlobUrl","getMessageVideo","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","MediaSpoiler","isVisible","withAnimation","rect","currentTarget","clientY","shiftX","shiftY","Keys","Transition","activeKey","NothingFound","PasswordForm","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","Picker","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","shouldMinimize","lockedSelectedIds","unlockedSelectedIds","unlockedIds","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","splice","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","renderCheckbox","PrivateChatInfo","Loading","fluid","withPeerColors","iconElement","titleText","LimitPreview","leftText","rightText","floatingBadgeText","floatingBadgeIcon","hasFloatingBadge","isProgressFull","tailPosition","userStatus","selectUserStatus","adminMember","customTitle","isOwner","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","connectionState","mediaViewer","currentTopicId","userFullInfo","emojiStatus","emojiStatusSticker","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","ProfileInfo","openPremiumModal","openStickerSet","photos","prevMediaId","prevAvatarOwnerId","mediaIdRef","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","stickerSetInfo","selectPreviousMedia","selectNextMedia","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","_","renderPhotoTabs","renderPhoto","canCopyTitle","renderStatus","ReactionStaticEmoji","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","observeIntersectionForPlaying","blankUrl","ReportModal","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","EmbeddedMessage","senderChat","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","wrappedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","emojiSize","isChatGroup","isChatSender","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","customColor","useDynamicColorListener","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasSize","parentWidth","parentHeight","handleResize","entry","contentRect","useResizeObserver","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","orderBy","priority","lastMessage","selectChatLastMessage","isVerified","CustomEmojiEffect","particleSize","onEnded","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","generateRandomDropPath","path","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","withEffects","selectPerformanceSettingsValue","genericEffects","effectSize","shouldPause","shouldLoop","stopActiveReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","effectId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","noPlay","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","effect","ChatFolderModal","MuteChatModal","ChatBadge","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","renderContent","Archive","archiveSettings","onDragEnter","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","contextActions","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","handleDragEnter","minimized","buttonClassName","withPortalForMenu","info","Badge","avatarWrapper","chatsPreview","bySelector","Map","addCallback","selector","setter","ChatCallStatus","lastMessageId","selectChatLastMessageId","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","Chat","folderId","orderDiff","animationType","offsetTop","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","useEnsureMessage","renderSubtitle","useChatListEntry","getIsForumPanelClosed","state","getter","createSignal","clientsCount","set","useEffectOnce","delete","useSelectorSignal","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDelete","handleMute","handleChatFolderChange","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withStoryGap","StoryViewerOrigin","ChatList","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","pill","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","hash","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","code","digit","isArchiveInList","shift","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","offsetHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","ActionMessageSuggestedAvatar","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetch","videoTs","videoSizes","l","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","SimilarChannel","channel","setColor","imgBlobUrl","averageColor","getAverageColor","rgb2hex","useAverageColor","MoreChannels","channelsCount","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","count","selectSimilarChannelIds","SimilarChannels","toggleChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","clearTimeout","handleToggle","Skeleton","xmlns","SHOW_CHANNELS_NUMBER","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","requestConfetti","checkGiftCode","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isGiftCode","isSuggestedAvatar","isJoinedMessage","isJoinedChannelMessage","shouldShowConfettiRef","targetUsers","isContextMenuShown","handleGiftCodeClick","slug","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewBoosts","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","addCustomEmojiInputRenderCallback","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","TextFormatter","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","p","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","isFile","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","MAX_NESTING_PARENTS","parentNode","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isPreview","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","Photo","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","getMessagePhoto","getMessageWebPagePhoto","withBlurredBackground","useBlurredMediaThumbRef","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","REACTION_SIZE","cn","createClassNameBuilder","ReactionSelectorCustomReaction","chosen","noAppearAnimation","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","enabledReactions","currentReactions","maxUniqueReactions","reactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","currentReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","getReactionUniqueKey","Video","canAutoPlay","getMessageWebPageVideo","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","isPlayerReady","markPlayerReady","hasThumb","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","handleTimeUpdate","isFinite","isWebPageVideo","calculateVideoDimensions","onTimeUpdate","onCancelMediaTransfer","openTelegramLink","handleMediaClick","handleQuickButtonClick","useEnsureStory","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","firstQuote","addExtraClass","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","period","schema","getSchemaByType","formatFullDate","minDate","maxDate","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","StoryRibbonButton","isRibbonShown","isArchivedRibbonShown","canShow","PREVIEW_AVATAR_COUNT","reverse","preloadPeerIds","animateClosing","animateOpening","withStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","index","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","byPeerId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","preloadProgressive","preloadHashes","peerStories","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideo","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","openMapModal","closeStoryViewer","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","clientWidth","mediaAreas","isShiny","geoPoint","geo","channelId","handleMediaAreaClick","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","shouldPlay","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","IGNORE_TAGS","createCallbackManager","hotkeys","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","initial","signalRef","isFirstRun","dependency","subscribe","cleanupEffect","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","mediaSource","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","savedCallback","lastCallback","onBeforeUnload","ConnectorClass","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","stopCurrentAudio","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","q","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","fillColor","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","zoom","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","Bold","Italic","INS","Underline","S","Strike","STRIKE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange","encoded5bit","bitsCount","valuesCount","bitsData","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","fitCount","newData","springFactor","leftFiller","rightFiller","val"],"sourceRoot":""}