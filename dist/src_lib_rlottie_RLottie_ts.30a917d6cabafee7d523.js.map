{"version":3,"file":"src_lib_rlottie_RLottie_ts.30a917d6cabafee7d523.js","mappings":"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","sources":["webpack://telegram-t/./src/lib/rlottie/RLottie.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts"],"sourcesContent":["import { animate } from '../../util/animation';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport Deferred from '../../util/Deferred';\nimport generateUniqueId from '../../util/generateUniqueId';\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport {\n  IS_ANDROID, IS_IOS, IS_SAFARI,\n} from '../../util/windowEnvironment';\nimport { requestMeasure, requestMutation } from '../fasterdom/fasterdom';\n\ninterface Params {\n  size: number;\n  noLoop?: boolean;\n  quality?: number;\n  isLowPriority?: boolean;\n  coords?: { x: number; y: number };\n}\n\nconst WAITING = Symbol('WAITING');\ntype Frame =\n  undefined\n  | typeof WAITING\n  | ImageBitmap;\n\nconst HIGH_PRIORITY_QUALITY = (IS_ANDROID || IS_IOS) ? 0.75 : 1;\nconst LOW_PRIORITY_QUALITY = IS_ANDROID ? 0.5 : 0.75;\nconst LOW_PRIORITY_QUALITY_SIZE_THRESHOLD = 24;\nconst HIGH_PRIORITY_CACHE_MODULO = IS_SAFARI ? 2 : 4;\nconst LOW_PRIORITY_CACHE_MODULO = 0;\n\nconst workers = launchMediaWorkers().map(({ connector }) => connector);\nconst instancesByRenderId = new Map<string, RLottie>();\n\nconst PENDING_CANVAS_RESIZES = new WeakMap<HTMLCanvasElement, Promise<void>>();\n\nlet lastWorkerIndex = -1;\n\nclass RLottie {\n  // Config\n\n  private views = new Map<string, {\n    canvas: HTMLCanvasElement;\n    ctx: CanvasRenderingContext2D;\n    isLoaded?: boolean;\n    isPaused?: boolean;\n    isSharedCanvas?: boolean;\n    coords?: Params['coords'];\n    onLoad?: NoneToVoidFunction;\n  }>();\n\n  private imgSize!: number;\n\n  private imageData!: ImageData;\n\n  private msPerFrame = 1000 / 60;\n\n  private reduceFactor = 1;\n\n  private cacheModulo!: number;\n\n  private workerIndex!: number;\n\n  private frames: Frame[] = [];\n\n  private framesCount?: number;\n\n  // State\n\n  private isAnimating = false;\n\n  private isWaiting = true;\n\n  private isEnded = false;\n\n  private isDestroyed = false;\n\n  private isRendererInited = false;\n\n  private approxFrameIndex = 0;\n\n  private prevFrameIndex = -1;\n\n  private stopFrameIndex? = 0;\n\n  private speed = 1;\n\n  private direction: 1 | -1 = 1;\n\n  private lastRenderAt?: number;\n\n  static init(...args: ConstructorParameters<typeof RLottie>) {\n    const [\n      , canvas,\n      renderId,\n      params,\n      viewId = generateUniqueId(), ,\n      onLoad,\n    ] = args;\n    let instance = instancesByRenderId.get(renderId);\n\n    if (!instance) {\n      // eslint-disable-next-line prefer-rest-params\n      instance = new RLottie(...args);\n      instancesByRenderId.set(renderId, instance);\n    } else {\n      instance.addView(viewId, canvas, onLoad, params?.coords);\n    }\n\n    return instance;\n  }\n\n  constructor(\n    private tgsUrl: string,\n    private container: HTMLDivElement | HTMLCanvasElement,\n    private renderId: string,\n    private params: Params,\n    viewId: string = generateUniqueId(),\n    private customColor?: [number, number, number],\n    private onLoad?: NoneToVoidFunction | undefined,\n    private onEnded?: (isDestroyed?: boolean) => void,\n    private onLoop?: () => void,\n  ) {\n    this.addView(viewId, container, onLoad, params.coords);\n    this.initConfig();\n    this.initRenderer();\n  }\n\n  public removeView(viewId: string) {\n    const {\n      canvas, ctx, isSharedCanvas, coords,\n    } = this.views.get(viewId)!;\n\n    if (isSharedCanvas) {\n      ctx.clearRect(coords!.x, coords!.y, this.imgSize, this.imgSize);\n    } else {\n      canvas.remove();\n    }\n\n    this.views.delete(viewId);\n\n    if (!this.views.size) {\n      this.destroy();\n    }\n  }\n\n  isPlaying() {\n    return this.isAnimating || this.isWaiting;\n  }\n\n  play(forceRestart = false, viewId?: string) {\n    if (viewId) {\n      this.views.get(viewId)!.isPaused = false;\n    }\n\n    if (this.isEnded && forceRestart) {\n      this.approxFrameIndex = Math.floor(0);\n    }\n\n    this.stopFrameIndex = undefined;\n    this.direction = 1;\n    this.doPlay();\n  }\n\n  pause(viewId?: string) {\n    this.lastRenderAt = undefined;\n\n    if (viewId) {\n      this.views.get(viewId)!.isPaused = true;\n\n      const areAllContainersPaused = Array.from(this.views.values()).every(({ isPaused }) => isPaused);\n      if (!areAllContainersPaused) {\n        return;\n      }\n    }\n\n    if (this.isWaiting) {\n      this.stopFrameIndex = this.approxFrameIndex;\n    } else {\n      this.isAnimating = false;\n    }\n\n    if (!this.params.isLowPriority) {\n      this.frames = this.frames.map((frame, i) => {\n        if (i === this.prevFrameIndex) {\n          return frame;\n        } else {\n          if (frame && frame !== WAITING) {\n            frame.close();\n          }\n\n          return undefined;\n        }\n      });\n    }\n  }\n\n  playSegment([startFrameIndex, stopFrameIndex]: [number, number], forceRestart = false, viewId?: string) {\n    if (viewId) {\n      this.views.get(viewId)!.isPaused = false;\n    }\n\n    const frameIndex = Math.round(this.approxFrameIndex);\n    this.stopFrameIndex = Math.floor(stopFrameIndex / this.reduceFactor);\n    if (frameIndex !== stopFrameIndex || forceRestart) {\n      this.approxFrameIndex = Math.floor(startFrameIndex / this.reduceFactor);\n    }\n    this.direction = startFrameIndex < stopFrameIndex ? 1 : -1;\n\n    this.doPlay();\n  }\n\n  setSpeed(speed: number) {\n    this.speed = speed;\n  }\n\n  setNoLoop(noLoop?: boolean) {\n    this.params.noLoop = noLoop;\n  }\n\n  async setSharedCanvasCoords(viewId: string, newCoords: Params['coords']) {\n    const containerInfo = this.views.get(viewId)!;\n    const {\n      canvas, ctx,\n    } = containerInfo;\n\n    const isCanvasDirty = !canvas.dataset.isJustCleaned || canvas.dataset.isJustCleaned === 'false';\n\n    if (!isCanvasDirty) {\n      await PENDING_CANVAS_RESIZES.get(canvas);\n    }\n\n    let [canvasWidth, canvasHeight] = [canvas.width, canvas.height];\n\n    if (isCanvasDirty) {\n      const sizeFactor = this.calcSizeFactor();\n      ([canvasWidth, canvasHeight] = ensureCanvasSize(canvas, sizeFactor));\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n      canvas.dataset.isJustCleaned = 'true';\n      requestMeasure(() => {\n        canvas.dataset.isJustCleaned = 'false';\n      });\n    }\n\n    containerInfo.coords = {\n      x: Math.round((newCoords?.x || 0) * canvasWidth),\n      y: Math.round((newCoords?.y || 0) * canvasHeight),\n    };\n\n    const frame = this.getFrame(this.prevFrameIndex) || this.getFrame(Math.round(this.approxFrameIndex));\n\n    if (frame && frame !== WAITING) {\n      ctx.drawImage(frame, containerInfo.coords!.x, containerInfo.coords!.y);\n    }\n  }\n\n  private addView(\n    viewId: string,\n    container: HTMLDivElement | HTMLCanvasElement,\n    onLoad?: NoneToVoidFunction,\n    coords?: Params['coords'],\n  ) {\n    const sizeFactor = this.calcSizeFactor();\n\n    let imgSize: number;\n\n    if (container instanceof HTMLDivElement) {\n      if (!(container.parentNode instanceof HTMLElement)) {\n        throw new Error('[RLottie] Container is not mounted');\n      }\n\n      const { size } = this.params;\n\n      imgSize = Math.round(size * sizeFactor);\n\n      if (!this.imgSize) {\n        this.imgSize = imgSize;\n        this.imageData = new ImageData(imgSize, imgSize);\n      }\n\n      requestMutation(() => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d')!;\n\n        canvas.style.width = `${size}px`;\n        canvas.style.height = `${size}px`;\n\n        canvas.width = imgSize;\n        canvas.height = imgSize;\n\n        container.appendChild(canvas);\n\n        this.views.set(viewId, {\n          canvas, ctx, onLoad,\n        });\n      });\n    } else {\n      if (!container.isConnected) {\n        throw new Error('[RLottie] Shared canvas is not mounted');\n      }\n\n      const canvas = container;\n      const ctx = canvas.getContext('2d')!;\n\n      imgSize = Math.round(this.params.size * sizeFactor);\n\n      if (!this.imgSize) {\n        this.imgSize = imgSize;\n        this.imageData = new ImageData(imgSize, imgSize);\n      }\n\n      const [canvasWidth, canvasHeight] = ensureCanvasSize(canvas, sizeFactor);\n\n      this.views.set(viewId, {\n        canvas,\n        ctx,\n        isSharedCanvas: true,\n        coords: {\n          x: Math.round(coords!.x * canvasWidth),\n          y: Math.round(coords!.y * canvasHeight),\n        },\n        onLoad,\n      });\n    }\n\n    if (this.isRendererInited) {\n      this.doPlay();\n    }\n  }\n\n  private calcSizeFactor() {\n    const {\n      size,\n      isLowPriority,\n      // Reduced quality only looks acceptable on big enough images\n      quality = isLowPriority && (!size || size > LOW_PRIORITY_QUALITY_SIZE_THRESHOLD)\n        ? LOW_PRIORITY_QUALITY : HIGH_PRIORITY_QUALITY,\n    } = this.params;\n\n    // Reduced quality only looks acceptable on high DPR screens\n    return Math.max(window.devicePixelRatio * quality, 1);\n  }\n\n  private destroy() {\n    this.isDestroyed = true;\n    this.pause();\n    this.clearCache();\n    this.destroyRenderer();\n\n    instancesByRenderId.delete(this.renderId);\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      if (frame && frame !== WAITING) {\n        frame.close();\n      }\n    });\n\n    // Help GC\n    this.imageData = undefined as any;\n    this.frames = [];\n  }\n\n  private initConfig() {\n    const { isLowPriority } = this.params;\n\n    this.cacheModulo = isLowPriority ? LOW_PRIORITY_CACHE_MODULO : HIGH_PRIORITY_CACHE_MODULO;\n  }\n\n  setColor(newColor: [number, number, number] | undefined) {\n    this.customColor = newColor;\n  }\n\n  private initRenderer() {\n    this.workerIndex = cycleRestrict(MAX_WORKERS, ++lastWorkerIndex);\n\n    workers[this.workerIndex].request({\n      name: 'rlottie:init',\n      args: [\n        this.renderId,\n        this.tgsUrl,\n        this.imgSize,\n        this.params.isLowPriority || false,\n        this.customColor,\n        this.onRendererInit.bind(this),\n      ],\n    });\n  }\n\n  private destroyRenderer() {\n    workers[this.workerIndex].request({\n      name: 'rlottie:destroy',\n      args: [this.renderId],\n    });\n  }\n\n  private onRendererInit(reduceFactor: number, msPerFrame: number, framesCount: number) {\n    this.isRendererInited = true;\n    this.reduceFactor = reduceFactor;\n    this.msPerFrame = msPerFrame;\n    this.framesCount = framesCount;\n\n    if (this.isWaiting) {\n      this.doPlay();\n    }\n  }\n\n  changeData(tgsUrl: string) {\n    this.pause();\n    this.tgsUrl = tgsUrl;\n    this.initConfig();\n\n    workers[this.workerIndex].request({\n      name: 'rlottie:changeData',\n      args: [\n        this.renderId,\n        this.tgsUrl,\n        this.params.isLowPriority || false,\n        this.onChangeData.bind(this),\n      ],\n    });\n  }\n\n  private onChangeData(reduceFactor: number, msPerFrame: number, framesCount: number) {\n    this.reduceFactor = reduceFactor;\n    this.msPerFrame = msPerFrame;\n    this.framesCount = framesCount;\n    this.isWaiting = false;\n    this.isAnimating = false;\n\n    this.doPlay();\n  }\n\n  private doPlay() {\n    if (!this.framesCount) {\n      return;\n    }\n\n    if (this.isDestroyed) {\n      return;\n    }\n\n    if (this.isAnimating) {\n      return;\n    }\n\n    if (!this.isWaiting) {\n      this.lastRenderAt = undefined;\n    }\n\n    this.isEnded = false;\n    this.isAnimating = true;\n    this.isWaiting = false;\n\n    animate(() => {\n      if (this.isDestroyed) {\n        return false;\n      }\n\n      // Paused from outside\n      if (!this.isAnimating) {\n        const areAllLoaded = Array.from(this.views.values()).every(({ isLoaded }) => isLoaded);\n        if (areAllLoaded) {\n          return false;\n        }\n      }\n\n      const frameIndex = Math.round(this.approxFrameIndex);\n      const frame = this.getFrame(frameIndex);\n      if (!frame || frame === WAITING) {\n        if (!frame) {\n          this.requestFrame(frameIndex);\n        }\n\n        this.isAnimating = false;\n        this.isWaiting = true;\n        return false;\n      }\n\n      if (this.cacheModulo && frameIndex % this.cacheModulo === 0) {\n        this.cleanupPrevFrame(frameIndex);\n      }\n\n      if (frameIndex !== this.prevFrameIndex) {\n        this.views.forEach((containerData) => {\n          const {\n            ctx, isLoaded, isPaused, coords: { x, y } = {}, onLoad,\n          } = containerData;\n\n          if (!isLoaded || !isPaused) {\n            ctx.clearRect(x || 0, y || 0, this.imgSize, this.imgSize);\n            ctx.drawImage(frame, x || 0, y || 0);\n          }\n\n          if (!isLoaded) {\n            containerData.isLoaded = true;\n            onLoad?.();\n          }\n        });\n\n        this.prevFrameIndex = frameIndex;\n      }\n\n      const now = Date.now();\n      const currentSpeed = this.lastRenderAt ? this.msPerFrame / (now - this.lastRenderAt) : 1;\n      const delta = (this.direction * this.speed) / currentSpeed;\n      const expectedNextFrameIndex = Math.round(this.approxFrameIndex + delta);\n\n      this.lastRenderAt = now;\n\n      // Forward animation finished\n      if (delta > 0 && (frameIndex === this.framesCount! - 1 || expectedNextFrameIndex > this.framesCount! - 1)) {\n        if (this.params.noLoop) {\n          this.isAnimating = false;\n          this.isEnded = true;\n          this.onEnded?.();\n          return false;\n        }\n        this.onLoop?.();\n\n        this.approxFrameIndex = 0;\n\n        // Backward animation finished\n      } else if (delta < 0 && (frameIndex === 0 || expectedNextFrameIndex < 0)) {\n        if (this.params.noLoop) {\n          this.isAnimating = false;\n          this.isEnded = true;\n          this.onEnded?.();\n          return false;\n        }\n        this.onLoop?.();\n\n        this.approxFrameIndex = this.framesCount! - 1;\n\n        // Stop frame reached\n      } else if (\n        this.stopFrameIndex !== undefined\n        && (frameIndex === this.stopFrameIndex\n          || (\n            (delta > 0 && expectedNextFrameIndex > this.stopFrameIndex)\n            || (delta < 0 && expectedNextFrameIndex < this.stopFrameIndex)\n          ))\n      ) {\n        this.stopFrameIndex = undefined;\n        this.isAnimating = false;\n        return false;\n\n        // Preparing next frame\n      } else {\n        this.approxFrameIndex += delta;\n      }\n\n      const nextFrameIndex = Math.round(this.approxFrameIndex);\n\n      if (!this.getFrame(nextFrameIndex)) {\n        this.requestFrame(nextFrameIndex);\n        this.isWaiting = true;\n        this.isAnimating = false;\n        return false;\n      }\n\n      return true;\n    }, requestMutation);\n  }\n\n  private getFrame(frameIndex: number) {\n    return this.frames[frameIndex];\n  }\n\n  private requestFrame(frameIndex: number) {\n    this.frames[frameIndex] = WAITING;\n\n    workers[this.workerIndex].request({\n      name: 'rlottie:renderFrames',\n      args: [this.renderId, frameIndex, this.onFrameLoad.bind(this)],\n    });\n  }\n\n  private cleanupPrevFrame(frameIndex: number) {\n    if (this.framesCount! < 3) {\n      return;\n    }\n\n    const prevFrameIndex = cycleRestrict(this.framesCount!, frameIndex - 1);\n    this.frames[prevFrameIndex] = undefined;\n  }\n\n  private onFrameLoad(frameIndex: number, imageBitmap: ImageBitmap) {\n    if (this.frames[frameIndex] !== WAITING) {\n      return;\n    }\n\n    this.frames[frameIndex] = imageBitmap;\n\n    if (this.isWaiting) {\n      this.doPlay();\n    }\n  }\n}\n\nfunction ensureCanvasSize(canvas: HTMLCanvasElement, sizeFactor: number) {\n  const expectedWidth = Math.round(canvas.offsetWidth * sizeFactor);\n  const expectedHeight = Math.round(canvas.offsetHeight * sizeFactor);\n\n  if (canvas.width !== expectedWidth || canvas.height !== expectedHeight) {\n    const deferred = new Deferred<void>();\n    PENDING_CANVAS_RESIZES.set(canvas, deferred.promise);\n    requestMutation(() => {\n      canvas.width = expectedWidth;\n      canvas.height = expectedHeight;\n      deferred.resolve();\n    });\n  }\n\n  return [expectedWidth, expectedHeight];\n}\n\nexport default RLottie;\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker);\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n"],"names":["animate","cycleRestrict","Deferred","generateUniqueId","launchMediaWorkers","MAX_WORKERS","IS_ANDROID","IS_IOS","IS_SAFARI","requestMeasure","requestMutation","WAITING","Symbol","HIGH_PRIORITY_QUALITY","LOW_PRIORITY_QUALITY","LOW_PRIORITY_QUALITY_SIZE_THRESHOLD","HIGH_PRIORITY_CACHE_MODULO","LOW_PRIORITY_CACHE_MODULO","workers","map","_ref","connector","instancesByRenderId","Map","PENDING_CANVAS_RESIZES","WeakMap","lastWorkerIndex","RLottie","init","_len","arguments","length","args","Array","_key","canvas","renderId","params","viewId","onLoad","instance","get","set","addView","coords","constructor","tgsUrl","container","undefined","customColor","onEnded","onLoop","_defineProperty","initConfig","initRenderer","removeView","ctx","isSharedCanvas","views","clearRect","x","y","imgSize","remove","delete","size","destroy","isPlaying","isAnimating","isWaiting","play","forceRestart","isPaused","isEnded","approxFrameIndex","Math","floor","stopFrameIndex","direction","doPlay","pause","lastRenderAt","areAllContainersPaused","from","values","every","_ref2","isLowPriority","frames","frame","i","prevFrameIndex","close","playSegment","_ref3","startFrameIndex","frameIndex","round","reduceFactor","setSpeed","speed","setNoLoop","noLoop","setSharedCanvasCoords","newCoords","containerInfo","isCanvasDirty","dataset","isJustCleaned","canvasWidth","canvasHeight","width","height","sizeFactor","calcSizeFactor","ensureCanvasSize","getFrame","drawImage","HTMLDivElement","parentNode","HTMLElement","Error","imageData","ImageData","document","createElement","getContext","style","appendChild","isConnected","isRendererInited","quality","max","window","devicePixelRatio","isDestroyed","clearCache","destroyRenderer","forEach","cacheModulo","setColor","newColor","workerIndex","request","name","onRendererInit","bind","msPerFrame","framesCount","changeData","onChangeData","areAllLoaded","_ref4","isLoaded","requestFrame","cleanupPrevFrame","containerData","now","Date","currentSpeed","delta","expectedNextFrameIndex","nextFrameIndex","onFrameLoad","imageBitmap","expectedWidth","offsetWidth","expectedHeight","offsetHeight","deferred","promise","resolve","ConnectorClass","target","onUpdate","channel","postMessage","type","messageData","requestStates","requestStatesByCallback","messageId","payload","requestState","Promise","reject","Object","assign","withCallback","callback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","data","update","error","response","callbackArgs","message","createConnector","worker","handleMessage","addEventListener","removeEventListener","index","IS_TEST","min","navigator","hardwareConcurrency","instances","fill","Worker","URL","import","meta","url"],"sourceRoot":""}